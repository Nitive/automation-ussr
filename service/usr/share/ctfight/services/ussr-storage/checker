#!/usr/bin/python2
import sys, traceback
import math 
import socket
import re
import random
import signal

if len(sys.argv) < 5:
    sys.exit('Usage: %s (PUT|CHECK) <host> <id> <flag>' % sys.argv[0])

command = sys.argv[1]
host = sys.argv[2]
id = sys.argv[3]
flag = sys.argv[4]
port = 4445
    	
if(command == "PUT"):
	code = 200;
	try:
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.connect((host, port))
		s.recv(2048)
		s.send("PUT " + id + " " + flag + "\n")
		result = s.recv(1024)
		pattern_fail = re.compile(".*FAIL .*")
		pattern_ok = re.compile(".*OK.*")
		
		if(not pattern_ok.match(result) and not pattern_fail.match(result)):
			result = s.recv(1024).strip();

		if(not pattern_ok.match(result)):
			s.close()
			raise Exception
		print "[OK]"
		s.close()
	except:
		print "[CURRUPT]"
		code = 500
	sys.exit(code)

if(command == "CHECK"):
	code = 200;
	try:
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		s.connect((host, port))
		s.recv(1024)
		s.send("GET " + id + "\n")
		result = s.recv(1024).strip();
		pattern_fail = re.compile(".*FAIL .*")
		pattern_flag = re.compile(".*DATA (.*)")
		
		if(not pattern_flag.match(result) and not pattern_fail.match(result)):
			result = s.recv(1024).strip();

		if(pattern_fail.match(result)):
			s.close()
			raise Exception
		
		if(pattern_flag.match(result)):
			flag2 = pattern_flag.match(result).group(1).strip();
			if(flag2 != flag):
				s.close()
				raise Exception
			else:
				print "[OK]"
		s.close()
	except:
		print "[CURRUPT]"
		code = 500
	sys.exit(code)
